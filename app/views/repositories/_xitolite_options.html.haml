- if repository.is_a?(Repository::Xitolite)

  #xitolite-messages

  = form_for repository.git_extra, url: repository_git_extras_path(repository), html: { method: :put, remote: true } do |f|

    %div{ class: 'box tabular' }

      - unless repository.extra[:git_annex]

        %p
          %label= l(:label_enable_git_daemon)
          = f.check_box :git_daemon, disabled: !@project.is_public

        - if user_allowed_to(:create_repository_git_notifications, repository.project)
          %p
            %label= l(:label_enable_git_notify)
            = f.check_box :git_notify

        - if user_allowed_to(:create_repository_protected_branches, repository.project)
          %p
            %label= l(:label_enable_protected_branches)
            = f.check_box :protected_branch

        %p
          %label= l(:label_enable_smart_http)
          = f.select :git_http, options_for_select(RepositoryGitExtra::SMART_HTTP_OPTIONS, selected: repository.extra[:git_http].to_s)

        %p
          %label= l(:label_repository_default_branch)
          - if !repository.branches.empty?
            = f.select :default_branch, options_for_select(repository.branches.collect{ |b| [b.to_s, b.to_s] }, selected: repository.branches.find{ |b| b.is_default}.to_s)
          - else
            %span{ class: 'label label-info' }= repository.extra[:default_branch]

        %p
          %label= l(:label_mirroring_keys_installed)
          = image_tag (RedmineGitHosting::Config.mirroring_keys_installed? ? 'true.png' : 'exclamation.png')

      %p
        %label= l(:label_repository_exists_in_gitolite)
        = image_tag (repository.exists_in_gitolite? ? 'true.png' : 'exclamation.png')

      %p
        %label= l(:label_browse_repository)
        = link_to h(repository.url), {controller: 'repositories', action: 'show', id: @project, repository_id: repository.identifier_param}

    = f.submit l(:button_save) unless repository.extra[:git_annex]
